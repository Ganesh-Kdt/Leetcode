Problem statement
You have been given an array ‘a’ of ‘n’ unique non-negative integers.



Find the second largest and second smallest element from the array.



Return the two elements (second largest and second smallest) as another array of size 2.



Example :
Input: ‘n’ = 5, ‘a’ = [1, 2, 3, 4, 5]
Output: [4, 2]

The second largest element after 5 is 4, and the second smallest element after 1 is 2.


public class Solution {
    public static int[] getSecondOrderElements(int n, int []a) {
        int new_arr[]=new int[2];
        int max=Integer.MIN_VALUE;
        int min=Integer.MAX_VALUE;
        for (int i=0;i<=n-1;i++){
            if(max<a[i])
                max=a[i];
            if(min>a[i])
                min=a[i];
        }
        int second_max=Integer.MIN_VALUE;
        int second_min=Integer.MAX_VALUE;
        for(int i=0;i<=n-1;i++){
            if(a[i]>second_max && a[i]!=max)
                second_max=a[i];
            if(second_min>a[i] && min!=a[i])
                second_min=a[i];
        }
        new_arr[0]=second_max;
        new_arr[1]=second_min;
        return new_arr;
    }
}

Summary - 
1. For second largest element it should be smaller than the largest and bigger than every other element in the array.
2. So we first find the largest element.
3 Then we find an element which is smaller than the max but larger than everyone else.